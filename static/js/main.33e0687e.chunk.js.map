{"version":3,"sources":["Timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","Math","floor","time","toString","length","App","timer","setTimer","diff","setDiff","subscription","setSubscription","prevent","setPrevent","className","onClick","unsubscribe","timerSubscription","interval","pipe","map","v","subscribe","event","timerInstance","setTimeout","clearTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA2BeA,EAzBD,SAACC,GACb,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,qBAAU,WACR,IAAIN,EAAQO,KAAKC,MAAMV,EAAMW,KAAO,MACpCR,GAAS,kBAAmC,IAA5BD,EAAMU,WAAWC,OAAe,IAAM,IAAMX,KAE5D,IAAIE,EAAUK,KAAKC,MAAOV,EAAMW,KAAO,KAAQ,IAC/CN,GAAW,kBAAqC,IAA9BD,EAAQQ,WAAWC,OAAe,IAAM,IAAMT,KAEhE,IAAIE,EAAUN,EAAMW,KAAO,GAC3BJ,GAAW,kBAAqC,IAA9BD,EAAQM,WAAWC,OAAe,IAAM,IAAOP,OAChE,CAACN,EAAMW,OAGR,mCACE,+BACGT,EADH,IACWE,EADX,IACqBE,Q,gBCyDZQ,MAtEf,WACA,MAA0Bb,mBAAS,GAAnC,mBAAOc,EAAP,KAAcC,EAAd,KACA,EAAwBf,mBAAS,GAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KAEA,EAAwCjB,mBAAS,IAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KACA,EAA8BnB,oBAAS,GAAvC,mBAAOoB,EAAP,KAAgBC,EAAhB,KA8CE,OACE,sBAAKC,UAAU,MAAf,UACA,gDACE,sBAAKA,UAAU,YAAf,UAEE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CAAOZ,KAAMI,GAAgBE,MAG/B,sBAAKM,UAAU,UAAf,UACE,wBAAQC,QAtDG,WACnB,GAAKL,EAQHA,EAAaM,cACbT,EAAS,GACTE,EAAQ,GACRE,EAAgB,QAXC,CACjB,IAAMM,EAAoBC,YAXhB,KAYPC,KAAKC,aAAI,SAACC,GAAD,OAAOA,EAAI,MACpBC,WAAU,SAACD,GACVd,EAASc,EAAIb,MAEjBG,EAAgBM,KA+CqBH,UAAU,YAAzC,wBACA,wBAAQC,QAvCE,SAACQ,GACnB,GAAIX,EAAS,CACXC,GAAW,GACX,IAAMW,EAAgBC,YAAW,WAC/BZ,GAAW,GACXa,aAAaF,KACZ,UAECd,GACFA,EAAaM,cAGfP,EAAQH,GACRK,EAAgB,KA0BoBG,UAAU,YAAxC,kBACA,wBAAQC,QAvBG,WACfL,GACFA,EAAaM,cAGf,IAAMC,EAAoBC,YA/Cd,KA+C8BI,WAAU,SAACD,GACnDd,EAASc,MAEXV,EAAgBM,IAeuBH,UAAU,YAAzC,6BC3DKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.33e0687e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Timer = (props) => {\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let hours = Math.floor(props.time / 3600);\n    setHours(() => (hours.toString().length === 1 ? \"0\" : \"\") + hours);\n\n    let minutes = Math.floor((props.time % 3600) / 60);\n    setMinutes(() => (minutes.toString().length === 1 ? \"0\" : \"\") + minutes);\n\n    let seconds = props.time % 60;\n    setSeconds(() => (seconds.toString().length === 1 ? \"0\" : \"\" ) + seconds);\n  }, [props.time]);\n\n  return (\n    <>\n      <h3>\n        {hours}:{minutes}:{seconds}\n      </h3>\n    </>\n  )\n};\n\nexport default Timer;\n","import { useState } from 'react';\nimport \"./App.css\";\nimport Timer from \"./Timer/Timer\";\nimport { interval } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nconst delay = 1000;\n\nfunction App() {\nconst [timer, setTimer] = useState(0);\nconst [diff, setDiff] = useState(0);\n\nconst [subscription, setSubscription] = useState(\"\");\nconst [prevent, setPrevent] = useState(true);\n\nconst StartHandler = () => {\n  if (!subscription) {\n    const timerSubscription = interval(delay)\n      .pipe(map((v) => v + 1))\n      .subscribe((v) => {\n        setTimer(v + diff);\n      });\n    setSubscription(timerSubscription);\n  } else {\n    subscription.unsubscribe();\n    setTimer(0);\n    setDiff(0);\n    setSubscription(\"\");\n  }\n};\n\nconst WaitHandler = (event) => {\n  if (prevent) {\n    setPrevent(false);\n    const timerInstance = setTimeout(function () {\n      setPrevent(true);\n      clearTimeout(timerInstance);\n    }, 300);\n  } else {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    setDiff(timer);\n    setSubscription(\"\");\n  }\n};\n\nconst ResetHandler = () => {\n  if (subscription) {\n    subscription.unsubscribe();\n  }\n\n  const timerSubscription = interval(delay).subscribe((v) => {\n    setTimer(v);\n  });\n  setSubscription(timerSubscription);\n};\n\n  return (\n    <div className=\"App\">\n    <h1>RxJs Stopwatch</h1>\n      <div className=\"stopwatch\">\n\n        <div className=\"display\">\n          <Timer time={timer ? timer : diff} />\n        </div>\n\n        <div className=\"buttons\">\n          <button onClick={StartHandler} className=\"btn btn-s\">Start/Stop</button>\n          <button onClick={WaitHandler} className=\"btn btn-w\">Wait</button>\n          <button onClick={ResetHandler} className=\"btn btn-r\">Reset</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}